// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/model.proto

package tensorflow.serving;

public final class Model {
    private Model() {}

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface ModelSpecOrBuilder extends
                                        // @@protoc_insertion_point(interface_extends:tensorflow.serving.ModelSpec)
                                                com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Required servable name.
         * </pre>
         *
         * <code>string name = 1;</code>
         *
         * @return The name.
         */
        java.lang.String getName();

        /**
         * <pre>
         * Required servable name.
         * </pre>
         *
         * <code>string name = 1;</code>
         *
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <pre>
         * Optional version. If unspecified, will use the latest (numerical) version.
         * Typically not needed unless coordinating across multiple models that were
         * co-trained and/or have inter-dependencies on the versions used at inference
         * time.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value version = 2;</code>
         *
         * @return Whether the version field is set.
         */
        boolean hasVersion();

        /**
         * <pre>
         * Optional version. If unspecified, will use the latest (numerical) version.
         * Typically not needed unless coordinating across multiple models that were
         * co-trained and/or have inter-dependencies on the versions used at inference
         * time.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value version = 2;</code>
         *
         * @return The version.
         */
        com.google.protobuf.Int64Value getVersion();

        /**
         * <pre>
         * Optional version. If unspecified, will use the latest (numerical) version.
         * Typically not needed unless coordinating across multiple models that were
         * co-trained and/or have inter-dependencies on the versions used at inference
         * time.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value version = 2;</code>
         */
        com.google.protobuf.Int64ValueOrBuilder getVersionOrBuilder();

        /**
         * <pre>
         * A named signature to evaluate. If unspecified, the default signature will
         * be used. Note that only MultiInference will initially support this.
         * </pre>
         *
         * <code>string signature_name = 3;</code>
         *
         * @return The signatureName.
         */
        java.lang.String getSignatureName();

        /**
         * <pre>
         * A named signature to evaluate. If unspecified, the default signature will
         * be used. Note that only MultiInference will initially support this.
         * </pre>
         *
         * <code>string signature_name = 3;</code>
         *
         * @return The bytes for signatureName.
         */
        com.google.protobuf.ByteString
        getSignatureNameBytes();
    }

    /**
     * <pre>
     * Metadata for an inference request such as the model name and version.
     * </pre>
     * <p>
     * Protobuf type {@code tensorflow.serving.ModelSpec}
     */
    public static final class ModelSpec extends
                                        com.google.protobuf.GeneratedMessageV3 implements
                                                                               // @@protoc_insertion_point(message_implements:tensorflow.serving.ModelSpec)
                                                                                       ModelSpecOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use ModelSpec.newBuilder() to construct.
        private ModelSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private ModelSpec() {
            name_ = "";
            signatureName_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
                UnusedPrivateParameter unused) {
            return new ModelSpec();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return tensorflow.serving.Model.internal_static_tensorflow_serving_ModelSpec_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return tensorflow.serving.Model.internal_static_tensorflow_serving_ModelSpec_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            tensorflow.serving.Model.ModelSpec.class, tensorflow.serving.Model.ModelSpec.Builder.class);
        }

        public static final int NAME_FIELD_NUMBER = 1;
        @SuppressWarnings("serial")
        private volatile java.lang.Object name_ = "";

        /**
         * <pre>
         * Required servable name.
         * </pre>
         *
         * <code>string name = 1;</code>
         *
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                name_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * Required servable name.
         * </pre>
         *
         * <code>string name = 1;</code>
         *
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int VERSION_FIELD_NUMBER = 2;
        private com.google.protobuf.Int64Value version_;

        /**
         * <pre>
         * Optional version. If unspecified, will use the latest (numerical) version.
         * Typically not needed unless coordinating across multiple models that were
         * co-trained and/or have inter-dependencies on the versions used at inference
         * time.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value version = 2;</code>
         *
         * @return Whether the version field is set.
         */
        @java.lang.Override
        public boolean hasVersion() {
            return version_ != null;
        }

        /**
         * <pre>
         * Optional version. If unspecified, will use the latest (numerical) version.
         * Typically not needed unless coordinating across multiple models that were
         * co-trained and/or have inter-dependencies on the versions used at inference
         * time.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value version = 2;</code>
         *
         * @return The version.
         */
        @java.lang.Override
        public com.google.protobuf.Int64Value getVersion() {
            return version_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : version_;
        }

        /**
         * <pre>
         * Optional version. If unspecified, will use the latest (numerical) version.
         * Typically not needed unless coordinating across multiple models that were
         * co-trained and/or have inter-dependencies on the versions used at inference
         * time.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value version = 2;</code>
         */
        @java.lang.Override
        public com.google.protobuf.Int64ValueOrBuilder getVersionOrBuilder() {
            return version_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : version_;
        }

        public static final int SIGNATURE_NAME_FIELD_NUMBER = 3;
        @SuppressWarnings("serial")
        private volatile java.lang.Object signatureName_ = "";

        /**
         * <pre>
         * A named signature to evaluate. If unspecified, the default signature will
         * be used. Note that only MultiInference will initially support this.
         * </pre>
         *
         * <code>string signature_name = 3;</code>
         *
         * @return The signatureName.
         */
        @java.lang.Override
        public java.lang.String getSignatureName() {
            java.lang.Object ref = signatureName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                signatureName_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * A named signature to evaluate. If unspecified, the default signature will
         * be used. Note that only MultiInference will initially support this.
         * </pre>
         *
         * <code>string signature_name = 3;</code>
         *
         * @return The bytes for signatureName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getSignatureNameBytes() {
            java.lang.Object ref = signatureName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                signatureName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
            }
            if (version_ != null) {
                output.writeMessage(2, getVersion());
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(signatureName_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, signatureName_);
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
            }
            if (version_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getVersion());
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(signatureName_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, signatureName_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof tensorflow.serving.Model.ModelSpec)) {
                return super.equals(obj);
            }
            tensorflow.serving.Model.ModelSpec other = (tensorflow.serving.Model.ModelSpec) obj;

            if (!getName()
                    .equals(other.getName())) return false;
            if (hasVersion() != other.hasVersion()) return false;
            if (hasVersion()) {
                if (!getVersion()
                        .equals(other.getVersion())) return false;
            }
            if (!getSignatureName()
                    .equals(other.getSignatureName())) return false;
            if (!getUnknownFields().equals(other.getUnknownFields())) return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            if (hasVersion()) {
                hash = (37 * hash) + VERSION_FIELD_NUMBER;
                hash = (53 * hash) + getVersion().hashCode();
            }
            hash = (37 * hash) + SIGNATURE_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getSignatureName().hashCode();
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static tensorflow.serving.Model.ModelSpec parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static tensorflow.serving.Model.ModelSpec parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static tensorflow.serving.Model.ModelSpec parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static tensorflow.serving.Model.ModelSpec parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static tensorflow.serving.Model.ModelSpec parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static tensorflow.serving.Model.ModelSpec parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static tensorflow.serving.Model.ModelSpec parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static tensorflow.serving.Model.ModelSpec parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static tensorflow.serving.Model.ModelSpec parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static tensorflow.serving.Model.ModelSpec parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static tensorflow.serving.Model.ModelSpec parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static tensorflow.serving.Model.ModelSpec parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {return newBuilder();}

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(tensorflow.serving.Model.ModelSpec prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Metadata for an inference request such as the model name and version.
         * </pre>
         * <p>
         * Protobuf type {@code tensorflow.serving.ModelSpec}
         */
        public static final class Builder extends
                                          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                                                                                                  // @@protoc_insertion_point(builder_implements:tensorflow.serving.ModelSpec)
                                                                                                          tensorflow.serving.Model.ModelSpecOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return tensorflow.serving.Model.internal_static_tensorflow_serving_ModelSpec_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return tensorflow.serving.Model.internal_static_tensorflow_serving_ModelSpec_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                tensorflow.serving.Model.ModelSpec.class,
                                tensorflow.serving.Model.ModelSpec.Builder.class);
            }

            // Construct using tensorflow.serving.Model.ModelSpec.newBuilder()
            private Builder() {

            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);

            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                name_ = "";
                version_ = null;
                if (versionBuilder_ != null) {
                    versionBuilder_.dispose();
                    versionBuilder_ = null;
                }
                signatureName_ = "";
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return tensorflow.serving.Model.internal_static_tensorflow_serving_ModelSpec_descriptor;
            }

            @java.lang.Override
            public tensorflow.serving.Model.ModelSpec getDefaultInstanceForType() {
                return tensorflow.serving.Model.ModelSpec.getDefaultInstance();
            }

            @java.lang.Override
            public tensorflow.serving.Model.ModelSpec build() {
                tensorflow.serving.Model.ModelSpec result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public tensorflow.serving.Model.ModelSpec buildPartial() {
                tensorflow.serving.Model.ModelSpec result = new tensorflow.serving.Model.ModelSpec(this);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartial0(tensorflow.serving.Model.ModelSpec result) {
                int from_bitField0_ = bitField0_;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    result.name_ = name_;
                }
                if (((from_bitField0_ & 0x00000002) != 0)) {
                    result.version_ = versionBuilder_ == null
                            ? version_
                            : versionBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000004) != 0)) {
                    result.signatureName_ = signatureName_;
                }
            }

            @java.lang.Override
            public Builder clone() {
                return super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof tensorflow.serving.Model.ModelSpec) {
                    return mergeFrom((tensorflow.serving.Model.ModelSpec) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(tensorflow.serving.Model.ModelSpec other) {
                if (other == tensorflow.serving.Model.ModelSpec.getDefaultInstance()) return this;
                if (!other.getName().isEmpty()) {
                    name_ = other.name_;
                    bitField0_ |= 0x00000001;
                    onChanged();
                }
                if (other.hasVersion()) {
                    mergeVersion(other.getVersion());
                }
                if (!other.getSignatureName().isEmpty()) {
                    signatureName_ = other.signatureName_;
                    bitField0_ |= 0x00000004;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            case 10: {
                                name_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00000001;
                                break;
                            } // case 10
                            case 18: {
                                input.readMessage(
                                        getVersionFieldBuilder().getBuilder(),
                                        extensionRegistry);
                                bitField0_ |= 0x00000002;
                                break;
                            } // case 18
                            case 26: {
                                signatureName_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00000004;
                                break;
                            } // case 26
                            default: {
                                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                    done = true; // was an endgroup tag
                                }
                                break;
                            } // default:
                        } // switch (tag)
                    } // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                } // finally
                return this;
            }

            private int bitField0_;

            private java.lang.Object name_ = "";

            /**
             * <pre>
             * Required servable name.
             * </pre>
             *
             * <code>string name = 1;</code>
             *
             * @return The name.
             */
            public java.lang.String getName() {
                java.lang.Object ref = name_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * Required servable name.
             * </pre>
             *
             * <code>string name = 1;</code>
             *
             * @return The bytes for name.
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                java.lang.Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Required servable name.
             * </pre>
             *
             * <code>string name = 1;</code>
             *
             * @param value The name to set.
             * @return This builder for chaining.
             */
            public Builder setName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                name_ = value;
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Required servable name.
             * </pre>
             *
             * <code>string name = 1;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearName() {
                name_ = getDefaultInstance().getName();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Required servable name.
             * </pre>
             *
             * <code>string name = 1;</code>
             *
             * @param value The bytes for name to set.
             * @return This builder for chaining.
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                name_ = value;
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            private com.google.protobuf.Int64Value version_;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> versionBuilder_;

            /**
             * <pre>
             * Optional version. If unspecified, will use the latest (numerical) version.
             * Typically not needed unless coordinating across multiple models that were
             * co-trained and/or have inter-dependencies on the versions used at inference
             * time.
             * </pre>
             *
             * <code>.google.protobuf.Int64Value version = 2;</code>
             *
             * @return Whether the version field is set.
             */
            public boolean hasVersion() {
                return ((bitField0_ & 0x00000002) != 0);
            }

            /**
             * <pre>
             * Optional version. If unspecified, will use the latest (numerical) version.
             * Typically not needed unless coordinating across multiple models that were
             * co-trained and/or have inter-dependencies on the versions used at inference
             * time.
             * </pre>
             *
             * <code>.google.protobuf.Int64Value version = 2;</code>
             *
             * @return The version.
             */
            public com.google.protobuf.Int64Value getVersion() {
                if (versionBuilder_ == null) {
                    return version_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : version_;
                } else {
                    return versionBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Optional version. If unspecified, will use the latest (numerical) version.
             * Typically not needed unless coordinating across multiple models that were
             * co-trained and/or have inter-dependencies on the versions used at inference
             * time.
             * </pre>
             *
             * <code>.google.protobuf.Int64Value version = 2;</code>
             */
            public Builder setVersion(com.google.protobuf.Int64Value value) {
                if (versionBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    version_ = value;
                } else {
                    versionBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Optional version. If unspecified, will use the latest (numerical) version.
             * Typically not needed unless coordinating across multiple models that were
             * co-trained and/or have inter-dependencies on the versions used at inference
             * time.
             * </pre>
             *
             * <code>.google.protobuf.Int64Value version = 2;</code>
             */
            public Builder setVersion(
                    com.google.protobuf.Int64Value.Builder builderForValue) {
                if (versionBuilder_ == null) {
                    version_ = builderForValue.build();
                } else {
                    versionBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Optional version. If unspecified, will use the latest (numerical) version.
             * Typically not needed unless coordinating across multiple models that were
             * co-trained and/or have inter-dependencies on the versions used at inference
             * time.
             * </pre>
             *
             * <code>.google.protobuf.Int64Value version = 2;</code>
             */
            public Builder mergeVersion(com.google.protobuf.Int64Value value) {
                if (versionBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) != 0) &&
                        version_ != null &&
                        version_ != com.google.protobuf.Int64Value.getDefaultInstance()) {
                        getVersionBuilder().mergeFrom(value);
                    } else {
                        version_ = value;
                    }
                } else {
                    versionBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Optional version. If unspecified, will use the latest (numerical) version.
             * Typically not needed unless coordinating across multiple models that were
             * co-trained and/or have inter-dependencies on the versions used at inference
             * time.
             * </pre>
             *
             * <code>.google.protobuf.Int64Value version = 2;</code>
             */
            public Builder clearVersion() {
                bitField0_ = (bitField0_ & ~0x00000002);
                version_ = null;
                if (versionBuilder_ != null) {
                    versionBuilder_.dispose();
                    versionBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Optional version. If unspecified, will use the latest (numerical) version.
             * Typically not needed unless coordinating across multiple models that were
             * co-trained and/or have inter-dependencies on the versions used at inference
             * time.
             * </pre>
             *
             * <code>.google.protobuf.Int64Value version = 2;</code>
             */
            public com.google.protobuf.Int64Value.Builder getVersionBuilder() {
                bitField0_ |= 0x00000002;
                onChanged();
                return getVersionFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Optional version. If unspecified, will use the latest (numerical) version.
             * Typically not needed unless coordinating across multiple models that were
             * co-trained and/or have inter-dependencies on the versions used at inference
             * time.
             * </pre>
             *
             * <code>.google.protobuf.Int64Value version = 2;</code>
             */
            public com.google.protobuf.Int64ValueOrBuilder getVersionOrBuilder() {
                if (versionBuilder_ != null) {
                    return versionBuilder_.getMessageOrBuilder();
                } else {
                    return version_ == null ?
                            com.google.protobuf.Int64Value.getDefaultInstance() : version_;
                }
            }

            /**
             * <pre>
             * Optional version. If unspecified, will use the latest (numerical) version.
             * Typically not needed unless coordinating across multiple models that were
             * co-trained and/or have inter-dependencies on the versions used at inference
             * time.
             * </pre>
             *
             * <code>.google.protobuf.Int64Value version = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>
            getVersionFieldBuilder() {
                if (versionBuilder_ == null) {
                    versionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                            getVersion(),
                            getParentForChildren(),
                            isClean());
                    version_ = null;
                }
                return versionBuilder_;
            }

            private java.lang.Object signatureName_ = "";

            /**
             * <pre>
             * A named signature to evaluate. If unspecified, the default signature will
             * be used. Note that only MultiInference will initially support this.
             * </pre>
             *
             * <code>string signature_name = 3;</code>
             *
             * @return The signatureName.
             */
            public java.lang.String getSignatureName() {
                java.lang.Object ref = signatureName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    signatureName_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * A named signature to evaluate. If unspecified, the default signature will
             * be used. Note that only MultiInference will initially support this.
             * </pre>
             *
             * <code>string signature_name = 3;</code>
             *
             * @return The bytes for signatureName.
             */
            public com.google.protobuf.ByteString
            getSignatureNameBytes() {
                java.lang.Object ref = signatureName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    signatureName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A named signature to evaluate. If unspecified, the default signature will
             * be used. Note that only MultiInference will initially support this.
             * </pre>
             *
             * <code>string signature_name = 3;</code>
             *
             * @param value The signatureName to set.
             * @return This builder for chaining.
             */
            public Builder setSignatureName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                signatureName_ = value;
                bitField0_ |= 0x00000004;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A named signature to evaluate. If unspecified, the default signature will
             * be used. Note that only MultiInference will initially support this.
             * </pre>
             *
             * <code>string signature_name = 3;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearSignatureName() {
                signatureName_ = getDefaultInstance().getSignatureName();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A named signature to evaluate. If unspecified, the default signature will
             * be used. Note that only MultiInference will initially support this.
             * </pre>
             *
             * <code>string signature_name = 3;</code>
             *
             * @param value The bytes for signatureName to set.
             * @return This builder for chaining.
             */
            public Builder setSignatureNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                signatureName_ = value;
                bitField0_ |= 0x00000004;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:tensorflow.serving.ModelSpec)
        }

        // @@protoc_insertion_point(class_scope:tensorflow.serving.ModelSpec)
        private static final tensorflow.serving.Model.ModelSpec DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new tensorflow.serving.Model.ModelSpec();
        }

        public static tensorflow.serving.Model.ModelSpec getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ModelSpec>
                PARSER = new com.google.protobuf.AbstractParser<ModelSpec>() {
            @java.lang.Override
            public ModelSpec parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e)
                            .setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<ModelSpec> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ModelSpec> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public tensorflow.serving.Model.ModelSpec getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_tensorflow_serving_ModelSpec_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_tensorflow_serving_ModelSpec_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n#tensorflow_serving/apis/model.proto\022\022t" +
                "ensorflow.serving\032\036google/protobuf/wrapp" +
                "ers.proto\"_\n\tModelSpec\022\014\n\004name\030\001 \001(\t\022,\n\007" +
                "version\030\002 \001(\0132\033.google.protobuf.Int64Val" +
                "ue\022\026\n\016signature_name\030\003 \001(\tB\003\370\001\001b\006proto3"
        };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                                                new com.google.protobuf.Descriptors.FileDescriptor[]{
                                                        com.google.protobuf.WrappersProto.getDescriptor(),
                                                });
        internal_static_tensorflow_serving_ModelSpec_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_tensorflow_serving_ModelSpec_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_tensorflow_serving_ModelSpec_descriptor,
                new java.lang.String[]{"Name", "Version", "SignatureName",});
        com.google.protobuf.WrappersProto.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}
